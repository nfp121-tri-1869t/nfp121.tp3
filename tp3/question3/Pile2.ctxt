#BlueJ class context
comment0.target=Pile2
comment1.params=taille
comment1.target=Pile2(int)
comment1.text=\ Cr\u00E9ation\ d'une\ pile.\r\n\ @param\ taille\ la\ "taille\ maximale"\ de\ la\ pile,\ doit\ \u00EAtre\ >\ 0\r\n
comment10.params=o
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\r\n\ Compare\ l'\u00E9galit\u00E9\ de\ deux\ piles.\r\n\ \r\n\ @return\ Un\ bool\u00E9en\ indiquant\ l'\u00E9galit\u00E9\ ou\ non\ de\ des\ deux\ piles.\r\n
comment11.params=
comment11.target=int\ hashCode()
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Convertit\ la\ pile\ en\ chaine\ de\ caract\u00E8res.\r\n\ \r\n\ @return\ Une\ chaine\ de\ caract\u00E8res\ au\ format\ "[{0},\ {1},\ {n}]"\ ou\ <b>{n}</b>\ \r\n\ repr\u00E9sente\ l'objet\ \u00E0\ l'index\ <b>n</b>\ convertit\ lui\ aussi\ en\ chaine\ de\ caract\u00E8re.\r\n
comment2.params=
comment2.target=Pile2()
comment3.params=
comment3.target=int\ taille()
comment3.text=\r\n\ Retourne\ la\ taille\ actuelle\ de\ la\ pile.\r\n
comment4.params=
comment4.target=int\ capacite()
comment4.text=\r\n\ Retourne\ la\ capacit\u00E9\ maximale\ de\ la\ pile.\r\n
comment5.params=o
comment5.target=void\ empiler(java.lang.Object)
comment5.text=\r\n\ Ajoute\ un\ objet\ en\ haut\ de\ la\ pile.\r\n
comment6.params=
comment6.target=java.lang.Object\ depiler()
comment6.text=\r\n\ Retire\ et\ retourne\ l'objet\ au\ sommet\ de\ la\ pile.\r\n
comment7.params=
comment7.target=java.lang.Object\ sommet()
comment7.text=\r\n\ Retourne\ l'objet\ au\ sommet\ de\ la\ pile\ sans\ le\ retirer.\r\n
comment8.params=
comment8.target=boolean\ estPleine()
comment8.text=\r\n\ D\u00E9finit\ si\ la\ pile\ est\ pleine.\r\n\ \r\n\ @return\ Un\ bool\u00E9en\ indiquant\ si\ la\ pile\ est\ pleine.\r\n
comment9.params=
comment9.target=boolean\ estVide()
comment9.text=\r\n\ D\u00E9finit\ si\ la\ pile\ est\ vide\ (ne\ contient\ aucun\ \u00E9l\u00E9ment).\r\n\ \r\n\ @return\ Un\ bool\u00E9en\ indiquant\ si\ la\ pile\ est\ vide.\r\n
numComments=13
